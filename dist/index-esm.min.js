function e(e,t){this.init(e,t)}function t(e){null==e&&(e=""),this.setTransformText(e)}function r(){this._lexer=new t,this._handler=null}function s(){}e.UNDEFINED=0,e.MATRIX=1,e.TRANSLATE=2,e.SCALE=3,e.ROTATE=4,e.SKEWX=5,e.SKEWY=6,e.LPAREN=7,e.RPAREN=8,e.NUMBER=9,e.EOD=10,e.prototype.init=function(e,t){this.type=e,this.text=t},e.prototype.typeis=function(e){return this.type===e},t.prototype.setTransformText=function(e){if("string"!=typeof e)throw new Error("TransformLexer.setTransformText: The first parameter must be a string");this._transformText=e},t.prototype.getNextToken=function(){for(var t=null,r=this._transformText;null===t;)if(null===r||""===r)t=new e(e.EOD,"");else if(r.match(/^([ \t\r\n,]+)/))r=r.substr(RegExp.$1.length);else if(r.match(/^(matrix)\b/))t=new e(e.MATRIX,RegExp.$1),r=r.substr(RegExp.$1.length);else if(r.match(/^(translate)\b/))t=new e(e.TRANSLATE,RegExp.$1),r=r.substr(RegExp.$1.length);else if(r.match(/^(scale)\b/))t=new e(e.SCALE,RegExp.$1),r=r.substr(RegExp.$1.length);else if(r.match(/^(rotate)\b/))t=new e(e.ROTATE,RegExp.$1),r=r.substr(RegExp.$1.length);else if(r.match(/^(skewX)\b/))t=new e(e.SKEWX,RegExp.$1),r=r.substr(RegExp.$1.length);else if(r.match(/^(skewY)\b/))t=new e(e.SKEWY,RegExp.$1),r=r.substr(RegExp.$1.length);else if(r.match(/^(\()/))t=new e(e.LPAREN,RegExp.$1),r=r.substr(RegExp.$1.length);else if(r.match(/^(\))/))t=new e(e.RPAREN,RegExp.$1),r=r.substr(RegExp.$1.length);else{if(!r.match(/^(([-+]?\d+(\.\d*)?|[-+]?\.\d+)([eE][-+]?\d+)?)/))throw new Error("TransformLexer.getNextToken: unable to tokenize text: "+r);t=new e(e.NUMBER,parseFloat(RegExp.$1)),r=r.substr(RegExp.$1.length)}return this._transformText=r,t},r.PARAMCOUNT={matrix:[6],translate:[1,2],scale:[1,2],rotate:[1,3],skewX:[1],skewY:[1]},r.METHODNAME={matrix:"matrix",translate:"translate",scale:"scale",rotate:"rotate",skewX:"skewX",skewY:"skewY"},r.prototype.parseTransform=function(t){if("string"!=typeof t)throw new Error("TransformParser.parseTransform: The first parameter must be a string");null!==this._handler&&"function"==typeof this._handler.beginParse&&this._handler.beginParse();var s=this._lexer;s.setTransformText(t);for(var n=s.getNextToken();!1===n.typeis(e.EOD);){var o=void 0,a=void 0,i=[];switch(n.type){case e.MATRIX:case e.TRANSLATE:case e.SCALE:case e.ROTATE:case e.SKEWX:case e.SKEWY:o=n.text,a=r.PARAMCOUNT[o],n=s.getNextToken();break;default:throw new Error("TransformParser.parseTransform: expected transform type: "+n.text)}if(n.type!==e.LPAREN)throw new Error("TransformParser.parserTransform: expected opening parenthesis: "+n.text);for(n=s.getNextToken();n!==e.EOD&&n.type===e.NUMBER;)i.push(n.text-0),n=s.getNextToken();for(var p=!1,l=i.length,h=0;h<a.length;h++)if(a[h]===l){p=!0;break}if(!1===p)throw new Error("TransformParser.parserTransform: incorrect number of arguments for "+o);if(n.type!==e.RPAREN)throw new Error("TransformParser.parserTransform: expected closing parenthesis: "+n.text);if(n=s.getNextToken(),null!==this._handler){var c=this._handler,f=r.METHODNAME[o];null!==c&&"function"==typeof c[f]&&c[f].apply(c,i)}}},r.prototype.setHandler=function(e){this._handler=e},s.prototype.show=function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),s=1;s<t;s++)r[s-1]=arguments[s];console.log("".concat(e,"(").concat(r.join(","),")"))},s.prototype.matrix=function(e,t,r,s,n,o){this.show.apply(this,["matrix"].concat(Array.prototype.slice.call(arguments)))},s.prototype.translate=function(e,t){this.show.apply(this,["translate"].concat(Array.prototype.slice.call(arguments)))},s.prototype.scale=function(e,t){this.show.apply(this,["scale"].concat(Array.prototype.slice.call(arguments)))},s.prototype.rotate=function(e,t,r){this.show.apply(this,["rotate"].concat(Array.prototype.slice.call(arguments)))},s.prototype.skewX=function(e){this.show.apply(this,["skewX"].concat(Array.prototype.slice.call(arguments)))},s.prototype.skewY=function(e){this.show.apply(this,["skewY"].concat(Array.prototype.slice.call(arguments)))};export{s as SampleHandler,t as TransformLexer,r as TransformParser};
//# sourceMappingURL=index-esm.min.js.map
